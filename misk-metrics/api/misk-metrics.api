public final class misk/metrics/FakeMetrics : misk/metrics/Metrics {
	public fun counter (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lio/prometheus/client/Counter;
	public fun gauge (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lio/prometheus/client/Gauge;
	public final fun get (Ljava/lang/String;[Lkotlin/Pair;)Ljava/lang/Double;
	public final fun getAllSamples ()Lkotlin/sequences/Sequence;
	public fun getMetrics ()Lmisk/metrics/v2/Metrics;
	public final fun getSample (Ljava/lang/String;[Lkotlin/Pair;Ljava/lang/String;)Lio/prometheus/client/Collector$MetricFamilySamples$Sample;
	public static synthetic fun getSample$default (Lmisk/metrics/FakeMetrics;Ljava/lang/String;[Lkotlin/Pair;Ljava/lang/String;ILjava/lang/Object;)Lio/prometheus/client/Collector$MetricFamilySamples$Sample;
	public fun histogram (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/Long;)Lmisk/metrics/Histogram;
	public final fun histogramCount (Ljava/lang/String;[Lkotlin/Pair;)Ljava/lang/Double;
	public final fun histogramMean (Ljava/lang/String;[Lkotlin/Pair;)Ljava/lang/Double;
	public final fun histogramP50 (Ljava/lang/String;[Lkotlin/Pair;)Ljava/lang/Double;
	public final fun histogramP99 (Ljava/lang/String;[Lkotlin/Pair;)Ljava/lang/Double;
	public final fun histogramQuantile (Ljava/lang/String;Ljava/lang/String;[Lkotlin/Pair;)Ljava/lang/Double;
	public final fun histogramSum (Ljava/lang/String;[Lkotlin/Pair;)Ljava/lang/Double;
	public fun legacyHistogram (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/Long;)Lmisk/metrics/Histogram;
}

public final class misk/metrics/FakeMetricsKt {
	public static final fun get (Lio/prometheus/client/CollectorRegistry;Ljava/lang/String;[Lkotlin/Pair;)Ljava/lang/Double;
	public static final fun getAllSamples (Lio/prometheus/client/CollectorRegistry;)Lkotlin/sequences/Sequence;
	public static final fun getSample (Lio/prometheus/client/CollectorRegistry;Ljava/lang/String;[Lkotlin/Pair;Ljava/lang/String;)Lio/prometheus/client/Collector$MetricFamilySamples$Sample;
	public static synthetic fun getSample$default (Lio/prometheus/client/CollectorRegistry;Ljava/lang/String;[Lkotlin/Pair;Ljava/lang/String;ILjava/lang/Object;)Lio/prometheus/client/Collector$MetricFamilySamples$Sample;
	public static final fun summaryCount (Lio/prometheus/client/CollectorRegistry;Ljava/lang/String;[Lkotlin/Pair;)Ljava/lang/Double;
	public static final fun summaryMean (Lio/prometheus/client/CollectorRegistry;Ljava/lang/String;[Lkotlin/Pair;)Ljava/lang/Double;
	public static final fun summaryP50 (Lio/prometheus/client/CollectorRegistry;Ljava/lang/String;[Lkotlin/Pair;)Ljava/lang/Double;
	public static final fun summaryP99 (Lio/prometheus/client/CollectorRegistry;Ljava/lang/String;[Lkotlin/Pair;)Ljava/lang/Double;
	public static final fun summaryQuantile (Lio/prometheus/client/CollectorRegistry;Ljava/lang/String;Ljava/lang/String;[Lkotlin/Pair;)Ljava/lang/Double;
	public static final fun summarySum (Lio/prometheus/client/CollectorRegistry;Ljava/lang/String;[Lkotlin/Pair;)Ljava/lang/Double;
}

public final class misk/metrics/FakeMetricsModule : misk/inject/KAbstractModule {
	public fun <init> ()V
}

public abstract interface class misk/metrics/Histogram {
	public static final field Companion Lmisk/metrics/Histogram$Companion;
	public abstract fun count ([Ljava/lang/String;)I
	public abstract fun getHistogram ()Lio/prometheus/client/Summary;
	public abstract fun record (D[Ljava/lang/String;)V
	public abstract fun timedMills ([Ljava/lang/String;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
}

public final class misk/metrics/Histogram$Companion {
	public final fun factory (Lio/prometheus/client/Summary;)Lmisk/metrics/Histogram;
}

public final class misk/metrics/Histogram$DefaultImpls {
	public static fun count (Lmisk/metrics/Histogram;[Ljava/lang/String;)I
	public static fun record (Lmisk/metrics/Histogram;D[Ljava/lang/String;)V
	public static fun timedMills (Lmisk/metrics/Histogram;[Ljava/lang/String;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
}

public abstract interface class misk/metrics/Metrics {
	public static final field Companion Lmisk/metrics/Metrics$Companion;
	public abstract fun counter (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lio/prometheus/client/Counter;
	public abstract fun gauge (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lio/prometheus/client/Gauge;
	public abstract fun getMetrics ()Lmisk/metrics/v2/Metrics;
	public abstract fun histogram (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/Long;)Lmisk/metrics/Histogram;
	public abstract fun legacyHistogram (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/Long;)Lmisk/metrics/Histogram;
}

public final class misk/metrics/Metrics$Companion {
	public final fun factory (Lmisk/metrics/v2/Metrics;)Lmisk/metrics/Metrics;
}

public final class misk/metrics/Metrics$DefaultImpls {
	public static fun counter (Lmisk/metrics/Metrics;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lio/prometheus/client/Counter;
	public static synthetic fun counter$default (Lmisk/metrics/Metrics;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lio/prometheus/client/Counter;
	public static fun gauge (Lmisk/metrics/Metrics;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lio/prometheus/client/Gauge;
	public static synthetic fun gauge$default (Lmisk/metrics/Metrics;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lio/prometheus/client/Gauge;
	public static fun histogram (Lmisk/metrics/Metrics;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/Long;)Lmisk/metrics/Histogram;
	public static synthetic fun histogram$default (Lmisk/metrics/Metrics;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/Long;ILjava/lang/Object;)Lmisk/metrics/Histogram;
	public static fun legacyHistogram (Lmisk/metrics/Metrics;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/Long;)Lmisk/metrics/Histogram;
	public static synthetic fun legacyHistogram$default (Lmisk/metrics/Metrics;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/Long;ILjava/lang/Object;)Lmisk/metrics/Histogram;
}

public final class misk/metrics/MetricsKt {
	public static final fun getDefaultQuantiles ()Ljava/util/Map;
}

public final class misk/metrics/MetricsModule : misk/inject/KAbstractModule {
	public fun <init> ()V
}

public final class misk/metrics/v2/FakeMetrics : misk/metrics/v2/Metrics {
	public fun counter (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lio/prometheus/client/Counter;
	public fun gauge (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lio/prometheus/client/Gauge;
	public final fun get (Ljava/lang/String;[Lkotlin/Pair;)Ljava/lang/Double;
	public final fun getAllSamples ()Lkotlin/sequences/Sequence;
	public fun getRegistry ()Lio/prometheus/client/CollectorRegistry;
	public final fun getSample (Ljava/lang/String;[Lkotlin/Pair;Ljava/lang/String;)Lio/prometheus/client/Collector$MetricFamilySamples$Sample;
	public static synthetic fun getSample$default (Lmisk/metrics/v2/FakeMetrics;Ljava/lang/String;[Lkotlin/Pair;Ljava/lang/String;ILjava/lang/Object;)Lio/prometheus/client/Collector$MetricFamilySamples$Sample;
	public fun histogram (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Lio/prometheus/client/Histogram;
	public fun legacyHistogram (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/Long;)Lmisk/metrics/Histogram;
	public fun peakGauge (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lmisk/metrics/v2/PeakGauge;
	public fun summary (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/Long;)Lio/prometheus/client/Summary;
	public final fun summaryCount (Ljava/lang/String;[Lkotlin/Pair;)Ljava/lang/Double;
	public final fun summaryMean (Ljava/lang/String;[Lkotlin/Pair;)Ljava/lang/Double;
	public final fun summaryP50 (Ljava/lang/String;[Lkotlin/Pair;)Ljava/lang/Double;
	public final fun summaryP99 (Ljava/lang/String;[Lkotlin/Pair;)Ljava/lang/Double;
	public final fun summaryQuantile (Ljava/lang/String;Ljava/lang/String;[Lkotlin/Pair;)Ljava/lang/Double;
	public final fun summarySum (Ljava/lang/String;[Lkotlin/Pair;)Ljava/lang/Double;
}

public final class misk/metrics/v2/FakeMetricsModule : misk/inject/KAbstractModule {
	public fun <init> ()V
}

public abstract interface class misk/metrics/v2/Metrics {
	public static final field Companion Lmisk/metrics/v2/Metrics$Companion;
	public abstract fun counter (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lio/prometheus/client/Counter;
	public abstract fun gauge (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lio/prometheus/client/Gauge;
	public abstract fun getRegistry ()Lio/prometheus/client/CollectorRegistry;
	public abstract fun histogram (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Lio/prometheus/client/Histogram;
	public abstract fun legacyHistogram (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/Long;)Lmisk/metrics/Histogram;
	public abstract fun peakGauge (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lmisk/metrics/v2/PeakGauge;
	public abstract fun summary (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/Long;)Lio/prometheus/client/Summary;
}

public final class misk/metrics/v2/Metrics$Companion {
	public final fun factory (Lio/prometheus/client/CollectorRegistry;)Lmisk/metrics/v2/Metrics;
}

public final class misk/metrics/v2/Metrics$DefaultImpls {
	public static fun counter (Lmisk/metrics/v2/Metrics;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lio/prometheus/client/Counter;
	public static synthetic fun counter$default (Lmisk/metrics/v2/Metrics;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lio/prometheus/client/Counter;
	public static fun gauge (Lmisk/metrics/v2/Metrics;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lio/prometheus/client/Gauge;
	public static synthetic fun gauge$default (Lmisk/metrics/v2/Metrics;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lio/prometheus/client/Gauge;
	public static fun histogram (Lmisk/metrics/v2/Metrics;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Lio/prometheus/client/Histogram;
	public static synthetic fun histogram$default (Lmisk/metrics/v2/Metrics;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lio/prometheus/client/Histogram;
	public static fun legacyHistogram (Lmisk/metrics/v2/Metrics;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/Long;)Lmisk/metrics/Histogram;
	public static synthetic fun legacyHistogram$default (Lmisk/metrics/v2/Metrics;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/Long;ILjava/lang/Object;)Lmisk/metrics/Histogram;
	public static fun peakGauge (Lmisk/metrics/v2/Metrics;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lmisk/metrics/v2/PeakGauge;
	public static synthetic fun peakGauge$default (Lmisk/metrics/v2/Metrics;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lmisk/metrics/v2/PeakGauge;
	public static fun summary (Lmisk/metrics/v2/Metrics;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/Long;)Lio/prometheus/client/Summary;
	public static synthetic fun summary$default (Lmisk/metrics/v2/Metrics;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/Long;ILjava/lang/Object;)Lio/prometheus/client/Summary;
}

public final class misk/metrics/v2/MetricsKt {
	public static final fun exponentialBuckets (DDI)Ljava/util/List;
	public static final fun getDefaultBuckets ()Ljava/util/List;
	public static final fun getDefaultQuantiles ()Ljava/util/Map;
	public static final fun getDefaultSparseBuckets ()Ljava/util/List;
	public static final fun linearBuckets (DDI)Ljava/util/List;
}

public final class misk/metrics/v2/PeakGauge : io/prometheus/client/SimpleCollector {
	public static final field Companion Lmisk/metrics/v2/PeakGauge$Companion;
	public fun <init> (Lmisk/metrics/v2/PeakGauge$Builder;)V
	public fun collect ()Ljava/util/List;
	public synthetic fun newChild ()Ljava/lang/Object;
	public final fun record (D)V
}

public final class misk/metrics/v2/PeakGauge$Builder : io/prometheus/client/SimpleCollector$Builder {
	public fun <init> ()V
	public synthetic fun create ()Lio/prometheus/client/SimpleCollector;
	public fun create ()Lmisk/metrics/v2/PeakGauge;
}

public final class misk/metrics/v2/PeakGauge$Child {
	public fun <init> ()V
	public final fun getAndClear ()D
	public final fun record (D)V
}

public final class misk/metrics/v2/PeakGauge$Companion {
	public final fun builder (Ljava/lang/String;Ljava/lang/String;)Lmisk/metrics/v2/PeakGauge$Builder;
}

