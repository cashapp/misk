public final class wisp/lease/AutoCloseableLease : java/lang/AutoCloseable, wisp/lease/Lease {
	public fun <init> (Lwisp/lease/Lease;)V
	public fun <init> (Lwisp/lease/Lease;Z)V
	public synthetic fun <init> (Lwisp/lease/Lease;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun acquire ()Z
	public fun addListener (Lwisp/lease/Lease$StateChangeListener;)V
	public fun checkHeld ()Z
	public fun checkHeldElsewhere ()Z
	public fun close ()V
	public fun getName ()Ljava/lang/String;
	public fun release ()Z
	public fun release (Z)Z
	public fun shouldHold ()Z
}

public final class wisp/lease/ExtensionsKt {
	public static final fun acquireOrNull (Lwisp/lease/LeaseManager;Ljava/lang/String;)Lwisp/lease/AutoCloseableLease;
	public static final fun acquireOrNull (Lwisp/lease/LeaseManager;Ljava/lang/String;Z)Lwisp/lease/AutoCloseableLease;
	public static synthetic fun acquireOrNull$default (Lwisp/lease/LeaseManager;Ljava/lang/String;ZILjava/lang/Object;)Lwisp/lease/AutoCloseableLease;
}

public abstract interface class wisp/lease/Lease {
	public abstract fun acquire ()Z
	public abstract fun addListener (Lwisp/lease/Lease$StateChangeListener;)V
	public abstract fun checkHeld ()Z
	public abstract fun checkHeldElsewhere ()Z
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun release ()Z
	public abstract fun release (Z)Z
	public abstract fun shouldHold ()Z
}

public abstract interface class wisp/lease/Lease$StateChangeListener {
	public abstract fun afterAcquire (Lwisp/lease/Lease;)V
	public abstract fun beforeRelease (Lwisp/lease/Lease;)V
}

public abstract interface class wisp/lease/LeaseManager {
	public abstract fun releaseAll ()V
	public abstract fun requestLease (Ljava/lang/String;)Lwisp/lease/Lease;
}

public final class wisp/lease/LeaseManager$DefaultImpls {
	public static fun releaseAll (Lwisp/lease/LeaseManager;)V
}

