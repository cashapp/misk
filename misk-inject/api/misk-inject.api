public final class misk/inject/GuiceKt {
	public static final fun asSingleton (Lcom/google/inject/binder/ScopedBindingBuilder;)V
	public static final fun getSetOf (Lcom/google/inject/Injector;Lkotlin/reflect/KClass;Lkotlin/reflect/KClass;)Ljava/util/Set;
	public static synthetic fun getSetOf$default (Lcom/google/inject/Injector;Lkotlin/reflect/KClass;Lkotlin/reflect/KClass;ILjava/lang/Object;)Ljava/util/Set;
	public static final fun listOfType (Lcom/google/inject/TypeLiteral;)Lcom/google/inject/TypeLiteral;
	public static final fun listOfType (Lkotlin/reflect/KClass;)Lcom/google/inject/TypeLiteral;
	public static final fun mapOfType (Lcom/google/inject/TypeLiteral;Lcom/google/inject/TypeLiteral;)Lcom/google/inject/TypeLiteral;
	public static final fun mapOfType (Lkotlin/reflect/KClass;Lkotlin/reflect/KClass;)Lcom/google/inject/TypeLiteral;
	public static final fun setOfType (Lcom/google/inject/TypeLiteral;)Lcom/google/inject/TypeLiteral;
	public static final fun setOfType (Lkotlin/reflect/KClass;)Lcom/google/inject/TypeLiteral;
	public static final fun toKey (Lcom/google/inject/TypeLiteral;Lkotlin/reflect/KClass;)Lcom/google/inject/Key;
	public static final fun toKey (Lkotlin/reflect/KClass;Lkotlin/reflect/KClass;)Lcom/google/inject/Key;
	public static synthetic fun toKey$default (Lcom/google/inject/TypeLiteral;Lkotlin/reflect/KClass;ILjava/lang/Object;)Lcom/google/inject/Key;
	public static synthetic fun toKey$default (Lkotlin/reflect/KClass;Lkotlin/reflect/KClass;ILjava/lang/Object;)Lcom/google/inject/Key;
	public static final fun typeLiteral (Ljava/lang/reflect/Type;)Lcom/google/inject/TypeLiteral;
	public static final fun typeLiteral (Lkotlin/reflect/KClass;)Lcom/google/inject/TypeLiteral;
	public static final fun typeLiteral (Lkotlin/reflect/KType;)Lcom/google/inject/TypeLiteral;
	public static final fun uninject (Ljava/lang/Object;)V
}

public abstract class misk/inject/KAbstractModule : com/google/inject/AbstractModule {
	public fun <init> ()V
	protected fun binder ()Lcom/google/inject/Binder;
	protected final fun newMapBinder (Lcom/google/inject/TypeLiteral;Lcom/google/inject/TypeLiteral;Lkotlin/reflect/KClass;)Lcom/google/inject/multibindings/MapBinder;
	protected final fun newMapBinder (Lkotlin/reflect/KClass;Lkotlin/reflect/KClass;Lkotlin/reflect/KClass;)Lcom/google/inject/multibindings/MapBinder;
	public static synthetic fun newMapBinder$default (Lmisk/inject/KAbstractModule;Lcom/google/inject/TypeLiteral;Lcom/google/inject/TypeLiteral;Lkotlin/reflect/KClass;ILjava/lang/Object;)Lcom/google/inject/multibindings/MapBinder;
	public static synthetic fun newMapBinder$default (Lmisk/inject/KAbstractModule;Lkotlin/reflect/KClass;Lkotlin/reflect/KClass;Lkotlin/reflect/KClass;ILjava/lang/Object;)Lcom/google/inject/multibindings/MapBinder;
	protected final fun newMultibinder (Lkotlin/reflect/KClass;Lkotlin/reflect/KClass;)Lcom/google/inject/multibindings/Multibinder;
	public static synthetic fun newMultibinder$default (Lmisk/inject/KAbstractModule;Lkotlin/reflect/KClass;Lkotlin/reflect/KClass;ILjava/lang/Object;)Lcom/google/inject/multibindings/Multibinder;
}

protected final class misk/inject/KAbstractModule$KotlinAnnotatedBindingBuilder : com/google/inject/binder/AnnotatedBindingBuilder {
	public fun <init> (Lcom/google/inject/binder/AnnotatedBindingBuilder;)V
	public fun annotatedWith (Ljava/lang/Class;)Lcom/google/inject/binder/LinkedBindingBuilder;
	public fun annotatedWith (Ljava/lang/annotation/Annotation;)Lcom/google/inject/binder/LinkedBindingBuilder;
	public fun asEagerSingleton ()V
	public fun in (Lcom/google/inject/Scope;)V
	public fun in (Ljava/lang/Class;)V
	public fun to (Lcom/google/inject/Key;)Lcom/google/inject/binder/ScopedBindingBuilder;
	public fun to (Lcom/google/inject/TypeLiteral;)Lcom/google/inject/binder/ScopedBindingBuilder;
	public fun to (Ljava/lang/Class;)Lcom/google/inject/binder/ScopedBindingBuilder;
	public fun toConstructor (Ljava/lang/reflect/Constructor;)Lcom/google/inject/binder/ScopedBindingBuilder;
	public fun toConstructor (Ljava/lang/reflect/Constructor;Lcom/google/inject/TypeLiteral;)Lcom/google/inject/binder/ScopedBindingBuilder;
	public fun toInstance (Ljava/lang/Object;)V
	public fun toProvider (Lcom/google/inject/Key;)Lcom/google/inject/binder/ScopedBindingBuilder;
	public fun toProvider (Lcom/google/inject/Provider;)Lcom/google/inject/binder/ScopedBindingBuilder;
	public fun toProvider (Lcom/google/inject/TypeLiteral;)Lcom/google/inject/binder/ScopedBindingBuilder;
	public fun toProvider (Ljava/lang/Class;)Lcom/google/inject/binder/ScopedBindingBuilder;
	public fun toProvider (Ljavax/inject/Provider;)Lcom/google/inject/binder/ScopedBindingBuilder;
}

public abstract class misk/inject/KInstallOnceModule : misk/inject/KAbstractModule {
	public fun <init> ()V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun hashCode ()I
}

