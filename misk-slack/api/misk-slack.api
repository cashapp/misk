public final class misk/slack-api/RealSlackClient : misk/slack-api/SlackClient {
	public static final field Companion Lmisk/slack-api/RealSlackClient$Companion;
	public fun <init> (Lmisk/slack-api/SlackWebhookApi;Lmisk/slack-api/SlackConfig;)V
	public fun postMessage (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lmisk/slack-api/SlackWebhookResponse;
}

public final class misk/slack-api/RealSlackClient$Companion {
	public final fun getLogger ()Lmu/KLogger;
}

public class misk/slack-api/SlackClient {
	public fun <init> ()V
	public fun postMessage (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lmisk/slack-api/SlackWebhookResponse;
	public static synthetic fun postMessage$default (Lmisk/slack-api/SlackClient;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lmisk/slack-api/SlackWebhookResponse;
}

public final class misk/slack-api/SlackConfig {
	public fun <init> (Ljava/lang/String;Lmisk/config/Secret;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Lmisk/config/Secret;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lmisk/config/Secret;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Lmisk/config/Secret;Ljava/lang/String;)Lmisk/slack-api/SlackConfig;
	public static synthetic fun copy$default (Lmisk/slack-api/SlackConfig;Ljava/lang/String;Lmisk/config/Secret;Ljava/lang/String;ILjava/lang/Object;)Lmisk/slack-api/SlackConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBaseUrl ()Ljava/lang/String;
	public final fun getDefault_channel ()Ljava/lang/String;
	public final fun getWebhook_path ()Lmisk/config/Secret;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class misk/slack-api/SlackModule : misk/inject/KAbstractModule {
	public fun <init> (Lmisk/slack-api/SlackConfig;)V
	public final fun provideMoshi ()Lcom/squareup/moshi/Moshi;
	public final fun provideSlackWebhookApi (Lmisk/client/HttpClientFactory;Lcom/squareup/moshi/Moshi;)Lmisk/slack-api/SlackWebhookApi;
}

public abstract interface class misk/slack-api/SlackWebhookApi {
	public abstract fun post (Ljava/lang/String;Lmisk/slack-api/SlackWebhookRequest;)Lretrofit2/Call;
}

public final class misk/slack-api/SlackWebhookRequest {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lmisk/slack-api/SlackWebhookRequest;
	public static synthetic fun copy$default (Lmisk/slack-api/SlackWebhookRequest;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lmisk/slack-api/SlackWebhookRequest;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannel ()Ljava/lang/String;
	public final fun getIcon_emoji ()Ljava/lang/String;
	public final fun getText ()Ljava/lang/String;
	public final fun getUsername ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class misk/slack-api/SlackWebhookResponse : java/lang/Enum {
	public static final field action_prohibited Lmisk/slack-api/SlackWebhookResponse;
	public static final field channel_is_archived Lmisk/slack-api/SlackWebhookResponse;
	public static final field channel_not_found Lmisk/slack-api/SlackWebhookResponse;
	public static final field invalid_payload Lmisk/slack-api/SlackWebhookResponse;
	public static final field missing_text_or_fallback_or_attachments Lmisk/slack-api/SlackWebhookResponse;
	public static final field ok Lmisk/slack-api/SlackWebhookResponse;
	public static final field user_not_found Lmisk/slack-api/SlackWebhookResponse;
	public static fun valueOf (Ljava/lang/String;)Lmisk/slack-api/SlackWebhookResponse;
	public static fun values ()[Lmisk/slack-api/SlackWebhookResponse;
}

