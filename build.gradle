plugins {
  id "org.jetbrains.kotlin.jvm" version "1.3.11" apply false
  id "com.vanniktech.maven.publish" version "0.4.0" apply false
  id 'com.gradle.build-scan' version "2.1"
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

ext {
  isCi = "true".equals(System.getenv('CI'))
  rep = null
}

apply from: file("./dependencies.gradle")

subprojects {
  apply plugin: "java"
  apply plugin: 'kotlin'
  buildscript {
    repositories {
      mavenCentral()
      jcenter()
    }

    dependencies {
      classpath dep.shadowJarPlugin
    }
  }
  repositories {
    mavenCentral()
    jcenter()
    // TODO(oldergod) remove once wire ships gRPC
    maven{
      url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
  }
  compileKotlin {
    kotlinOptions {
      jvmTarget = "1.8"
      allWarningsAsErrors = true
    }
  }
  compileTestKotlin {
    kotlinOptions {
      jvmTarget = "1.8"
      allWarningsAsErrors = true
    }
  }
  sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    test.java.srcDirs += 'src/test/kotlin/'
  }

  dependencies {
    testImplementation dep.junitApi
    testRuntimeOnly dep.junitEngine
  }
  test {
    useJUnitPlatform()
    testLogging {
      events "started", "passed", "skipped", "failed"
      exceptionFormat = 'full'
    }
  }
  if (rootProject.file("hooks.gradle").exists()) {
    apply from: rootProject.file("hooks.gradle")
  }
}

