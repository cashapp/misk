buildscript {
  repositories {
    mavenCentral()
    jcenter()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }

  apply from: new File("./dependencies.gradle")

  dependencies {
    classpath dep.kotlinGradlePlugin
    classpath dep.junitGradlePlugin
    classpath dep.mavenPublishGradlePlugin
    classpath dep.wireGradlePlugin
  }
}

tasks.register("testShardNonHibernate") {
  group = "Continuous integration"
  description = "Runs all tests that don't depend on misk-hibernate. " +
          "This target is intended for manually sharding tests to make CI faster."
}

tasks.register("testShardHibernate") {
  group = "Continuous integration"
  description = "Runs all tests that depend on misk-hibernate. " +
          "This target is intended for manually sharding tests to make CI faster."
}

subprojects { subProject ->
  apply plugin: 'java'
  apply plugin: 'kotlin'
  apply plugin: 'org.jetbrains.dokka'

  buildscript {
    repositories {
      mavenCentral()
      jcenter()
    }
  }
  repositories {
    mavenCentral()
    jcenter()
    maven {
      url "https://s3-us-west-2.amazonaws.com/dynamodb-local/release"
    }
  }
  compileKotlin {
    kotlinOptions {
      jvmTarget = "1.8"

      // TODO(alec): Enable again once Environment enum is deleted
       allWarningsAsErrors = false
    }
  }
  compileTestKotlin {
    kotlinOptions {
      jvmTarget = "1.8"

      // TODO(alec): Enable again once Environment enum is deleted
       allWarningsAsErrors = false
    }
  }
  sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    test.java.srcDirs += 'src/test/kotlin/'
  }

  dependencies {
    testImplementation dep.junitApi
    testRuntimeOnly dep.junitEngine

    // Platform/BOM dependencies constrain versions only.
    api enforcedPlatform(dep.grpcBom)
    api enforcedPlatform(dep.jacksonBom)
    api enforcedPlatform(dep.jerseyBom)
    api enforcedPlatform(dep.jettyBom)
    api enforcedPlatform(dep.kotlinBom)
    api enforcedPlatform(dep.nettyBom)
  }

  // We have to set the dokka configuration after evaluation since the com.vanniktech.maven.publish
  // plugin overwrites our dokka configuration on projects where it's applied.
  afterEvaluate { p ->
    p.tasks.dokka {
      reportUndocumented = false
      skipDeprecated = true
      jdkVersion = 8
    }
  }

  test {
    useJUnitPlatform()
    testLogging {
      events "started", "passed", "skipped", "failed"
      exceptionFormat = 'full'
      showStandardStreams = false
    }
  }
  if (rootProject.file("hooks.gradle").exists()) {
    apply from: rootProject.file("hooks.gradle")
  }

  if (["misk-aws","misk-events","misk-jobqueue","misk-jobqueue-testing","misk-jdbc","misk-jdbc-testing","misk-hibernate","misk-hibernate-testing"].contains(name)) {
    rootProject.getTasksByName("testShardHibernate", false).first().dependsOn.add(test)
  } else {
    rootProject.getTasksByName("testShardNonHibernate", false).first().dependsOn.add(test)
  }

  if (!path.startsWith(":samples") && !path.startsWith(":misk-embedded-sample")) {
    apply plugin: 'com.vanniktech.maven.publish'
  }

  // Workaround the Gradle bug resolving multiplatform dependencies.
  // https://github.com/square/okio/issues/647
  configurations.all { configuration ->
    if (name.contains('kapt') || name.contains("wire") || name.contains("proto") || name.contains("Proto")) {
      attributes.attribute(Usage.USAGE_ATTRIBUTE, subProject.objects.named(Usage.class, Usage.JAVA_RUNTIME))
    }
  }
}

if (hasProperty('buildScan')) {
  buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
  }
}
