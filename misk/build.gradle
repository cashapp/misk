sourceSets {
  main.resources {
    srcDirs += [
      'web/tabs/admin-dashboard/lib',
      'web/tabs/config/lib',
      'web/tabs/database/lib',
      'web/tabs/web-actions/lib',
    ]
    exclude '**/node_modules'
  }
}

dependencies {
  compile dep.kotlinStdLibJdk8
  compile dep.bouncycastle
  compile dep.guava
  compile dep.guice
  compile dep.guiceMultibindings
  compile dep.javaxInject
  compile dep.okHttp
  compile dep.okio
  compile dep.kotlinReflection
  compile dep.moshiCore
  compile dep.moshiKotlin
  compile dep.moshiAdapters
  compile dep.jettyHttp2
  compile dep.jettyServer
  compile dep.jettyUnixSocket
  compile dep.servletApi
  compile dep.jettyAlpnJava
  compile dep.jettyServlet
  compile dep.jettyServlets
  compile dep.jettyWebsocketServlet
  compile dep.jettyWebsocketServer
  compile dep.kubernetesClient
  compile dep.wireGrpcClient
  compile dep.wireRuntime
  compile dep.jacksonDatabind
  compile dep.jacksonDataformatYaml
  compile dep.jacksonKotlin
  compile dep.jacksonJsr310
  compile dep.jCommander
  compile dep.openTracing
  compile dep.openTracingUtil
  compile dep.openTracingOkHttp
  compile dep.retrofit
  compile dep.retrofitMoshi
  compile dep.retrofitProtobuf
  compile dep.retrofitWire
  compile dep.jaxbApi
  compile dep.prometheusClient
  compile dep.prometheusHotspot
  compile dep.jnrUnixsocket
  compile dep.concurrencyLimitsCore
  compile project(':misk-actions')
  compile project(':misk-core')
  compile project(':misk-inject')
  compile project(':misk-metrics')
  compile project(':misk-prometheus')
  compile project(':misk-service')

  testCompile dep.kotlinxCoroutines
  testCompile dep.mockitoCore
  testCompile project(':misk-testing')
  testImplementation dep.junit4Api
}

afterEvaluate { project ->
  project.tasks.dokka {
    outputDirectory = "$rootDir/docs/0.x"
    outputFormat = 'gfm'
  }
}

apply from: "$rootDir/gradle-mvn-publish.gradle"