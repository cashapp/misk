public final class wisp/containers/Composer {
	public static final field Companion Lwisp/containers/Composer$Companion;
	public fun <init> (Ljava/lang/String;[Lwisp/containers/Container;)V
	public final fun getRunning ()Ljava/util/concurrent/atomic/AtomicBoolean;
	public final fun start ()V
	public final fun stop ()V
}

public final class wisp/containers/Composer$Companion {
	public final fun getDockerClient ()Lcom/github/dockerjava/api/DockerClient;
}

public final class wisp/containers/Container {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public fun <init> (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)V
	public final fun component1 ()Lkotlin/jvm/functions/Function1;
	public final fun component2 ()Lkotlin/jvm/functions/Function2;
	public final fun copy (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lwisp/containers/Container;
	public static synthetic fun copy$default (Lwisp/containers/Container;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lwisp/containers/Container;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBeforeStartHook ()Lkotlin/jvm/functions/Function2;
	public final fun getCreateCmd ()Lkotlin/jvm/functions/Function1;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class wisp/containers/ContainerUtil {
	public static final field INSTANCE Lwisp/containers/ContainerUtil;
	public final fun dockerTargetOrLocalHost ()Ljava/lang/String;
	public final fun dockerTargetOrLocalIp ()Ljava/lang/String;
	public final fun isRunningInDocker ()Z
}

