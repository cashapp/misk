public abstract interface class misk/backoff/Backoff {
	public abstract fun nextRetry ()Ljava/time/Duration;
	public abstract fun reset ()V
}

public final class misk/backoff/DontRetryException : java/lang/Exception {
	public fun <init> (Ljava/lang/Exception;)V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Exception;)V
}

public class misk/backoff/ExponentialBackoff : misk/backoff/Backoff {
	public fun <init> (Ljava/time/Duration;Ljava/time/Duration;)V
	public fun <init> (Ljava/time/Duration;Ljava/time/Duration;Ljava/time/Duration;)V
	public fun <init> (Ljava/time/Duration;Ljava/time/Duration;Lkotlin/jvm/functions/Function1;)V
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)V
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)V
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)V
	public fun nextRetry ()Ljava/time/Duration;
	public fun reset ()V
}

public final class misk/backoff/FlatBackoff : misk/backoff/Backoff {
	public fun <init> ()V
	public fun <init> (Ljava/time/Duration;)V
	public synthetic fun <init> (Ljava/time/Duration;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getDuration ()Ljava/time/Duration;
	public fun nextRetry ()Ljava/time/Duration;
	public fun reset ()V
}

public final class misk/backoff/FullJitterBackoff : misk/backoff/ExponentialBackoff {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)V
}

public final class misk/backoff/RetriesKt {
	public static final fun retry (ILmisk/backoff/Backoff;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun retry (ILmisk/backoff/Backoff;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun retry (Lmisk/backoff/RetryConfig;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static synthetic fun retry$default (ILmisk/backoff/Backoff;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun retryableFuture (Lmisk/backoff/RetryConfig;Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
}

public final class misk/backoff/RetryConfig {
	public synthetic fun <init> (ILmisk/backoff/Backoff;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getOnRetry ()Lkotlin/jvm/functions/Function2;
	public final fun getShouldRetry ()Lkotlin/jvm/functions/Function1;
	public final fun getUpTo ()I
	public final fun getWithBackoff ()Lmisk/backoff/Backoff;
}

public final class misk/backoff/RetryConfig$Builder {
	public fun <init> (ILmisk/backoff/Backoff;)V
	public final fun build ()Lmisk/backoff/RetryConfig;
	public final fun component1 ()I
	public final fun component2 ()Lmisk/backoff/Backoff;
	public final fun copy (ILmisk/backoff/Backoff;)Lmisk/backoff/RetryConfig$Builder;
	public static synthetic fun copy$default (Lmisk/backoff/RetryConfig$Builder;ILmisk/backoff/Backoff;ILjava/lang/Object;)Lmisk/backoff/RetryConfig$Builder;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getOnRetry ()Lkotlin/jvm/functions/Function2;
	public final fun getShouldRetry ()Lkotlin/jvm/functions/Function1;
	public final fun getUpTo ()I
	public final fun getWithBackoff ()Lmisk/backoff/Backoff;
	public fun hashCode ()I
	public final fun onRetry (Lkotlin/jvm/functions/Function2;)Lmisk/backoff/RetryConfig$Builder;
	public final fun setOnRetry (Lkotlin/jvm/functions/Function2;)V
	public final fun setShouldRetry (Lkotlin/jvm/functions/Function1;)V
	public final fun shouldRetry (Lkotlin/jvm/functions/Function1;)Lmisk/backoff/RetryConfig$Builder;
	public fun toString ()Ljava/lang/String;
}

