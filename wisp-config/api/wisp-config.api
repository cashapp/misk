public final class wisp/config/ClasspathResourceLoaderPreprocessor : com/sksamuel/hoplite/preprocessor/PrefixProcessor {
	public fun <init> ()V
	public fun <init> (Lwisp/resources/ResourceLoader;)V
	public synthetic fun <init> (Lwisp/resources/ResourceLoader;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getResourceLoader ()Lwisp/resources/ResourceLoader;
	public fun processString (Ljava/lang/String;)Ljava/lang/String;
}

public abstract interface class wisp/config/Config {
}

public final class wisp/config/ConfigSource {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lwisp/config/ConfigSource;
	public static synthetic fun copy$default (Lwisp/config/ConfigSource;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lwisp/config/ConfigSource;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getConfigLocation ()Ljava/lang/String;
	public final fun getFormat ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class wisp/config/Configurable {
	public abstract fun configure (Lwisp/config/Config;)V
	public abstract fun getConfigClass ()Lkotlin/reflect/KClass;
}

public final class wisp/config/WispConfig {
	public static final field INSTANCE Lwisp/config/WispConfig;
	public final fun builder ()Lcom/sksamuel/hoplite/ConfigLoader$Builder;
}

public final class wisp/config/WispConfigKt {
	public static final fun addWispConfigSources (Lcom/sksamuel/hoplite/ConfigLoader$Builder;Ljava/util/List;Lwisp/resources/ResourceLoader;)Lcom/sksamuel/hoplite/ConfigLoader$Builder;
	public static synthetic fun addWispConfigSources$default (Lcom/sksamuel/hoplite/ConfigLoader$Builder;Ljava/util/List;Lwisp/resources/ResourceLoader;ILjava/lang/Object;)Lcom/sksamuel/hoplite/ConfigLoader$Builder;
}

