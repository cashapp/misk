buildscript {
  dependencies {
    classpath dep.kotlinAllOpenPlugin
    classpath dep.kotlinNoArgPlugin
  }
}

apply plugin: 'kotlin-allopen'
apply plugin: 'kotlin-jpa'

allOpen {
  annotation("javax.persistence.Entity")
  annotation("javax.persistence.Embeddable")
  annotation("javax.persistence.MappedSuperclass")
}

dependencies {
  api dep.hibernateCore
  implementation dep.guice
  implementation dep.okio
  implementation dep.okHttp
  implementation dep.loggingApi
  implementation dep.moshiCore
  implementation dep.moshiKotlin
  implementation dep.moshiAdapters
  implementation dep.wireRuntime
  implementation dep.tink
  implementation project(':misk')
  implementation project(':misk-actions')
  implementation project(':misk-core')
  implementation project(':misk-crypto')
  implementation project(':misk-inject')
  implementation project(':misk-service')
  api project(':misk-jdbc')

  testImplementation dep.docker
  // The docker-java we use in tests depends on an old version of junixsocket that depends on
  // log4j. We force it up a minor version in packages that use it.
  testImplementation('com.kohlschutter.junixsocket:junixsocket-native-common:2.3.2') {
    force = true
  }
  testImplementation('com.kohlschutter.junixsocket:junixsocket-common:2.3.2') {
    force = true
  }
  testImplementation dep.prometheusClient
  testImplementation dep.assertj
  testImplementation dep.kotlinTest
  testImplementation dep.mockitoCore
  testImplementation dep.logbackClassic
  testImplementation project(':misk-metrics')
  testImplementation project(':misk-testing')
  testImplementation project(':misk-hibernate-testing')
}

afterEvaluate { project ->
  project.tasks.dokka {
    outputDirectory = "$rootDir/docs/0.x"
    outputFormat = 'gfm'
  }
}

apply from: "$rootDir/gradle-mvn-publish.gradle"
