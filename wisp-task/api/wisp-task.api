public final class wisp/task/RepeatedTask {
	public static final field Companion Lwisp/task/RepeatedTask$Companion;
	public fun <init> (Ljava/lang/String;Ljava/time/Clock;Lio/micrometer/core/instrument/MeterRegistry;Lwisp/task/RepeatedTaskConfig;Lkotlin/jvm/functions/Function2;Lwisp/task/TaskConfig;Lkotlin/jvm/functions/Function2;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/time/Clock;Lio/micrometer/core/instrument/MeterRegistry;Lwisp/task/RepeatedTaskConfig;Lkotlin/jvm/functions/Function2;Lwisp/task/TaskConfig;Lkotlin/jvm/functions/Function2;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getName ()Ljava/lang/String;
	public final fun isRunning ()Z
	public final fun shutDown ()V
	public final fun startUp ()V
}

public final class wisp/task/RepeatedTask$Companion {
}

public final class wisp/task/RepeatedTaskConfig : wisp/config/Config {
	public fun <init> ()V
	public fun <init> (JJJJ)V
	public synthetic fun <init> (JJJJILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()J
	public final fun component2 ()J
	public final fun component3 ()J
	public final fun component4 ()J
	public final fun copy (JJJJ)Lwisp/task/RepeatedTaskConfig;
	public static synthetic fun copy$default (Lwisp/task/RepeatedTaskConfig;JJJJILjava/lang/Object;)Lwisp/task/RepeatedTaskConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDefaultJitterMs ()J
	public final fun getDefaultMaxDelayMs ()J
	public final fun getInitialDelayMs ()J
	public final fun getTimeBetweenRunsMs ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class wisp/task/RepeatedTaskKt {
	public static final fun getDefaultThrowableRetryPolicy ()Lkotlin/jvm/functions/Function2;
}

public final class wisp/task/RepeatedTaskManager {
	public fun <init> ()V
	public fun <init> (Lio/micrometer/core/instrument/MeterRegistry;)V
	public synthetic fun <init> (Lio/micrometer/core/instrument/MeterRegistry;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun createTask (Ljava/lang/String;Ljava/time/Clock;Lio/micrometer/core/instrument/MeterRegistry;Lwisp/task/RepeatedTaskConfig;Lkotlin/jvm/functions/Function2;Lwisp/task/TaskConfig;Lkotlin/jvm/functions/Function2;)Lwisp/task/RepeatedTask;
	public static synthetic fun createTask$default (Lwisp/task/RepeatedTaskManager;Ljava/lang/String;Ljava/time/Clock;Lio/micrometer/core/instrument/MeterRegistry;Lwisp/task/RepeatedTaskConfig;Lkotlin/jvm/functions/Function2;Lwisp/task/TaskConfig;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lwisp/task/RepeatedTask;
	public final fun getTask (Ljava/lang/String;)Lwisp/task/RepeatedTask;
	public final fun isTaskRunning (Ljava/lang/String;)Z
	public final fun shutDown ()V
	public final fun taskExists (Ljava/lang/String;)Z
}

public final class wisp/task/RepeatedTaskMetrics {
	public fun <init> (Lio/micrometer/core/instrument/MeterRegistry;)V
}

public final class wisp/task/Status : java/lang/Enum {
	public static final field FAILED Lwisp/task/Status;
	public static final field NO_RESCHEDULE Lwisp/task/Status;
	public static final field NO_WORK Lwisp/task/Status;
	public static final field OK Lwisp/task/Status;
	public final fun metricLabel ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lwisp/task/Status;
	public static fun values ()[Lwisp/task/Status;
}

public class wisp/task/TaskConfig : wisp/config/Config {
	public fun <init> ()V
}

public final class wisp/task/exception/FailedTaskException : java/lang/Exception {
	public fun <init> ()V
}

public final class wisp/task/exception/NoTaskFoundException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

public final class wisp/task/exception/NoWorkForTaskException : java/lang/Exception {
	public fun <init> ()V
}

public final class wisp/task/exception/TaskAlreadyExistsException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

