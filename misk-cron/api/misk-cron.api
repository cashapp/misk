public final class misk/cron/CronEntryModule : misk/inject/KAbstractModule {
	public static final field Companion Lmisk/cron/CronEntryModule$Companion;
	public synthetic fun <init> (Lkotlin/reflect/KClass;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class misk/cron/CronEntryModule$Companion {
	public final fun create (Lkotlin/reflect/KClass;)Lmisk/cron/CronEntryModule;
}

public final class misk/cron/CronLeaseBehavior : java/lang/Enum {
	public static final field ONE_LEASE_PER_CLUSTER Lmisk/cron/CronLeaseBehavior;
	public static final field ONE_LEASE_PER_CRON Lmisk/cron/CronLeaseBehavior;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lmisk/cron/CronLeaseBehavior;
	public static fun values ()[Lmisk/cron/CronLeaseBehavior;
}

public final class misk/cron/CronManager {
	public static final field Companion Lmisk/cron/CronManager$Companion;
	public fun <init> ()V
	public final fun tryAcquireSingleLeaseAndRunCrons (Ljava/time/Instant;)V
	public final fun tryToRunCrons (Ljava/time/Instant;)V
	public final fun waitForCronsComplete ()V
}

public final class misk/cron/CronManager$Companion {
}

public final class misk/cron/CronManager$CronEntry {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Lcom/cronutils/model/time/ExecutionTime;Ljava/lang/Runnable;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Lcom/cronutils/model/time/ExecutionTime;
	public final fun component4 ()Ljava/lang/Runnable;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Lcom/cronutils/model/time/ExecutionTime;Ljava/lang/Runnable;)Lmisk/cron/CronManager$CronEntry;
	public static synthetic fun copy$default (Lmisk/cron/CronManager$CronEntry;Ljava/lang/String;Ljava/lang/String;Lcom/cronutils/model/time/ExecutionTime;Ljava/lang/Runnable;ILjava/lang/Object;)Lmisk/cron/CronManager$CronEntry;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCronTab ()Ljava/lang/String;
	public final fun getExecutionTime ()Lcom/cronutils/model/time/ExecutionTime;
	public final fun getName ()Ljava/lang/String;
	public final fun getRunnable ()Ljava/lang/Runnable;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class misk/cron/CronModule : misk/inject/KInstallOnceModule {
	public fun <init> (Ljava/time/ZoneId;)V
	public fun <init> (Ljava/time/ZoneId;I)V
	public fun <init> (Ljava/time/ZoneId;ILjava/util/List;)V
	public fun <init> (Ljava/time/ZoneId;ILjava/util/List;Lmisk/cron/CronLeaseBehavior;)V
	public synthetic fun <init> (Ljava/time/ZoneId;ILjava/util/List;Lmisk/cron/CronLeaseBehavior;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun provideTaskQueue (Lmisk/tasks/RepeatedTaskQueueFactory;)Lmisk/tasks/RepeatedTaskQueue;
}

public abstract interface annotation class misk/cron/CronPattern : java/lang/annotation/Annotation {
	public abstract fun pattern ()Ljava/lang/String;
}

public final class misk/cron/FakeCronModule : misk/inject/KAbstractModule {
	public fun <init> (Ljava/time/ZoneId;)V
	public fun <init> (Ljava/time/ZoneId;I)V
	public fun <init> (Ljava/time/ZoneId;ILjava/util/List;)V
	public fun <init> (Ljava/time/ZoneId;ILjava/util/List;Lmisk/cron/CronLeaseBehavior;)V
	public synthetic fun <init> (Ljava/time/ZoneId;ILjava/util/List;Lmisk/cron/CronLeaseBehavior;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

